name: CI/CD Pipeline

on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
      - '**'

jobs:
  #Test's job
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    # Enviroment configuration
    env:
      MYSQLDB_USER: ${{ secrets.MYSQLDB_USER }}
      MYSQLDB_ROOT_PASSWORD: ${{ secrets.MYSQLDB_ROOT_PASSWORD }}
#      MYSQLDB_DATABASE: ${{ variables.MYSQLDB_DATABASE }}
#      MYSQLDB_LOCAL_PORT: ${{ variables.MYSQLDB_LOCAL_PORT }}
#      MYSQLDB_DOCKER_PORT: ${{ variables.MYSQLDB_DOCKER_PORT }}
#      SPRING_LOCAL_PORT: ${{ variables.SPRING_LOCAL_PORT }}
#      SPRING_DOCKER_PORT: ${{ variables.SPRING_DOCKER_PORT }}

    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
    #Sonar's Job
  sonar:
    #Depends on test's job
    needs: tests
    name: SonarCloud analysis
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.ACC_GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yenmai477_simpleapp

  build_and_push:
    name: Build & Push to DockerHub
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build and Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: yenmai478/simpleapp:latest

  deploy_to_droplet:
    runs-on: ubuntu-latest
    needs: build_and_push
    name: Deploy to Droplet
    steps:
      - uses: actions/checkout@v3

      - name:  Package necessary files
        run: |
          mkdir -p ../files
          cp ./docker-compose.prod.yml ../files
          tar -cvf deploy.tar ../files/

      - name: Deploy necessary files
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy.tar"
          target: "~/simpleapp"
      - name: Connect with SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
#          key: ${{ secrets.SSH_KEY }}
          password: ${{ secrets.SSH_PASSWORD }}
          
          script: |
            cd simpleapp
            docker-compose stop simpleapp
            docker pull yenmai478/simpleapp:latest
            docker-compose -f docker-compose.prod.yml up -d
